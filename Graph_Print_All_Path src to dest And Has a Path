import java.util.*;
public class Main
{
   static HashMap<Integer,HashMap<Integer,Integer>> map;
    public Main(int v){
        this.map = new HashMap<>();
        for(int i=1;i<=v;i++){
            map.put(i,new HashMap<Integer,Integer>());
        }
    }
    
    public static void AddEdge(int v1,int v2,int cost){
        map.get(v1).put(v2,cost);
        map.get(v2).put(v1,cost);
    }
    
    public static boolean ContainsEdge(int v1,int v2){
        return map.get(v1).containsKey(v2);
    }
    
    public static boolean Containvertex(int v1){
        return map.containsKey(v1);
    }
    
    public static int noOfEdge(){
        int sum =0;
        for(int key:map.keySet()){
            sum = sum+map.get(key).size();
        }
        return sum/2;
    }
    
    public static void removeEdge(int v1,int v2){
        if(ContainsEdge(v1,v2)){
            map.get(v1).remove(v2);
            map.get(v2).remove(v1);
        }
    }
    
    public static void removeVertex(int v1){
        for(int key:map.get(v1).keySet()){
            map.get(key).remove(v1);
        }
        map.remove(v1);
    }
    
    public static void display(){
        for(int key:map.keySet()){
            System.out.println(map.get(key));
        }
    }
    
    public static boolean hashpath(int src,int dest,HashSet<Integer> visited){
        if(src == dest)
         return true;
         
        visited.add(src);
        for(int nbrs:map.get(src).keySet()){
            if(!visited.contains(nbrs)){
                boolean ans = hashpath(nbrs,dest,visited);
                if(ans)
             return ans;
            }
            
        }
        visited.remove(src);
        return false;
    }
    
    public static void Printpath(int src,int dest,HashSet<Integer> visited,String ans){
        if(src == dest){
            System.out.println(ans+src);
            return;
        }
        visited.add(src);
        for(int nbrs:map.get(src).keySet()){
            if(!visited.contains(nbrs)){
                 Printpath(nbrs,dest,visited,ans+src);
            }
        }
        visited.remove(src);
    }
    
	public static void main(String[] args) {
		Main obj = new  Main(7);
		AddEdge(1,4,6);
		AddEdge(1,2,10);
	 	AddEdge(2,3,7);
	 	AddEdge(3,4,5);
		AddEdge(5,6,4);
	 	AddEdge(7,5,2);
	 	AddEdge(6,7,3);
		AddEdge(4,5,1);
        // removeVertex(4);
        display();
        System.out.println(hashpath(1,6,new HashSet<Integer>()));
        Printpath(1,6,new HashSet<Integer>(),"");
	}
}
